if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_CURRENT_SOURCE_DIR})
    # Settings when 'examples' is the root projet
    cmake_minimum_required(VERSION 3.20)
    project(zenohcpp_examples LANGUAGES C CXX)
    include(../cmake/helpers.cmake)
    set_default_build_type(Release)
    configure_include_project(ZENOHCPP_ZENOHC zenohc zenohc::lib "../../zenoh-c" zenohc "https://github.com/eclipse-zenoh/zenoh-c" "")
    configure_include_project(ZENOHCPP zenohcpp zenohcpp ".." zenohcpp "https://github.com/eclipse-zenoh/zenoh-cpp" "")
    add_custom_target(examples ALL)
else()
    message(STATUS "zenoh-cpp examples")
    add_custom_target(examples)
endif()

function(add_example file suffix is_cpp)
	get_filename_component(filename ${file} NAME_WE)
	set(target ${filename}_${suffix})
	add_executable(${target} EXCLUDE_FROM_ALL ${file})
	add_dependencies(examples ${target})
    target_link_libraries(${target} PUBLIC zenohc::lib)
	if (${is_cpp})
		target_link_libraries(${target} PUBLIC zenohcpp)
		set_property(TARGET ${target} PROPERTY LANGUAGE CXX)
		set_property(TARGET ${target} PROPERTY CXX_STANDARD 17)
	else()
		set_property(TARGET ${target} PROPERTY LANGUAGE C)
		set_property(TARGET ${target} PROPERTY C_STANDARD 11)
	endif()
	add_platform_libraries(${target})
endfunction()

function(add_examples glob suffix is_cpp)
	file(GLOB files ${glob})
	foreach(file ${files})
		add_example(${file} ${suffix} ${is_cpp})
	endforeach()
endfunction()

# C examples compiled with C compiler
add_examples("${CMAKE_CURRENT_SOURCE_DIR}/c/*.c" "c" FALSE)
# C examples compiled with C++ compiler
add_examples("${CMAKE_CURRENT_SOURCE_DIR}/c/*.c" "c_cpp" TRUE)
# C++ examples compiled with C++ compiler
add_examples("${CMAKE_CURRENT_SOURCE_DIR}/cpp/*.cpp" "cpp" TRUE)
